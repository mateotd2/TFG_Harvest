openapi: 3.0.3

info:
  title: Harvest APIs
  description: Api para la gestion de recursos de una empresa viticultora
  version: 1.0-SNAPSHOT


servers:
  - url: http://localhost:8080

tags:
  - name: Autenticado
    description: Funcionalidades relacionadas el autenticado y modificación de datos de usuario

  - name: Usuario
    description: Funcionalidades para todos los usuarios

  - name: Administrador
    description: Funcionalidades de Administrador

  - name: Trabajadores
    description: Funcionalidades para la gestion de Trabajadores

  - name: Capataz
    description: Funcionalidades de Capataz

  - name: Tractorista
    description: Funcionalidades de Tractorista


paths:
  # Funcionalidades
  ###########################################################################################################
  /api/auth/signin:
    post:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - Autenticado
      summary: Autenticacion con usuario y contraseña
      operationId: signin
      requestBody:
        description: Credenciales para acceder a funcionalidades del sistema
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequestDTO'
            example:
              username: validUsername
              password: ejemploPassword
      responses:
        200:
          description: Usuario y JWT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponseDTO'
              example:
                id: 1
                username: validUsername
                tokenType: Bearer
                accessToken: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtaWd1ZWxBZG1pbiIsImlhdCI6MTY5MjIzNDg3NiwiZXhwIjoxNjkyMjM0OTYyfQ.gfFLE9pE-HYLfG6_fgTj92CwsmkrTmUsQLz6D0s6IeB8KmqO0ue17ExUx3o7a-oebUr1BNnshtu-odZnANUu-A
                roles: [ "ROLE_ADMIN" ]

        400:
          description: Payload de signIn no valido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Datos no validos'
                status: 400
        401:
          description: Datos para login erroneos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Bad credentials
                status: 401

        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: To many requests
                status: 429

        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /api/auth/{id}/changePassword:
    post:
      tags:
        - Autenticado
      security:
        - bearerAuth: [ ]
      summary: Cambio de contraseña
      operationId: changePassword
      x-custom-role:
        - ADMIN
        - CAPATAZ
        - TRACTORISTA
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
            maximum: 9223372036854775807
            minimum: 0
          required: true
          description: Id de usuario al que se realiza cambio de contraseña
      requestBody:
        description: Antigua contraseña y nueva contraseña
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordDTO'
            example:
              oldPassword: 12345678
              newPassword: 87654321
      responses:
        200:
          description: Mensaje de cambio de contraseña exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
              example:
                message: 'Contraseña cambiada'

        400:
          description: Payload de usuario no valido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Datos no validos'
                status: 400

        401:
          description: Error 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: Bad credentials
                status: 401

        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/{id}/changePassword
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/{id}/updateUser:
    post:
      tags:
        - Autenticado
      security:
        - bearerAuth: [ ]
      summary: Actualizar datos de usuario
      operationId: updateUser
      x-custom-role:
        - ADMIN
        - CAPATAZ
        - TRACTORISTA
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
            maximum: 9223372036854775807
            minimum: 0
          required: true
          description: Id de usuario al que se realiza la actualizacion
      requestBody:
        description: Datos de usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDTO'
            example:
              email: juan@filo.com
              name: juan
              lastname: santiago
              dni: 12345678Q
              nss: 123456789012
              phone: 123456789
              birthdate: 1990-08-19

      responses:
        200:
          description: Exito en la actualizacion de datos de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
              example:
                message: 'User updated successfully!'
        400:
          description: Payload de usuario no valido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Datos no validos'
                status: 400
        401:
          description: Error 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: Bad credentials
                status: 401
        409:
          description: Error 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/updateUser
                error: Conflict
                message: Conflict
                status: 409
        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/updateUser
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /api/auth/signup:
    post:
      tags:
        - Autenticado
      security:
        - bearerAuth: [ ]
      summary: Registrar un usuario ( Solo puede el administrador)
      operationId: signUp
      x-custom-role:
        - ADMIN

      requestBody:
        description: Datos de usuario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserDTO'
            example:
              username: Juan
              password: 12345678
              roles: [ "capataz",
                       "tractorista" ]
              email: juan@filo.com
              name: juan
              lastname: santiago
              dni: 12345678Q
              nss: 123456789012
              phone: 123456789
              birthdate: 1990-08-19

      responses:
        201:
          description: Exito en el registro de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
              example:
                message: 'User registered successfully!'
        400:
          description: Payload de registro invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Usuario no valido'
                status: 400

        401:
          description: Error 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: Bad credentials
                status: 401

        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/workers:
    get:
      tags:
        - Trabajadores
      security:
        - bearerAuth: [ ]
      summary: Obtener resumen de trabajadores
      operationId: getWorkers
      x-custom-role:
        - ADMIN
        - CAPATAZ
        - TRACTORISTA

      responses:
        200:
          description: Listado de trabajadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkerDTO'

        401:
          description: Error 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: Bad credentials
                status: 401

        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


    post:
      tags:
        - Trabajadores
      security:
        - bearerAuth: [ ]
      summary: Registrar un trabajador ( Solo puede el administrador)
      operationId: signUpWorker
      x-custom-role:
        - ADMIN
      requestBody:
        description: Datos de trabajador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerDTO'
            example:
              name: juan
              lastname: santiago
              dni: 12345678Q
              nss: 123456789012
              phone: 123456789
              birthdate: 1990-08-19
              address: Ronda de Outeiro, nº 26 5ºA

      responses:
        201:
          description: Exito en el registro de Trabajador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
              example:
                message: 'Worker registered successfully!'
        400:
          description: Payload de registro invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Trabajador no valido'
                status: 400

        401:
          description: Error 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: Bad credentials
                status: 401

        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/workers/{id}:
    get:
      tags:
        - Trabajadores
      security:
        - bearerAuth: [ ]
      summary: Actualizar un trabajador ( Solo puede el administrador)
      operationId: getWorker
      x-custom-role:
        - ADMIN
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
            maximum: 9223372036854775807
            minimum: 0
          required: true
          description: Id del trabajador
      responses:
        200:
          description: Detalles de un trabajador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerDTO'
        404:
          description: Trabajador no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Trabajadores
      security:
        - bearerAuth: [ ]
      summary: Actualizar un trabajador ( Solo puede el administrador)
      operationId: updateWorker
      x-custom-role:
        - ADMIN
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
            maximum: 9223372036854775807
            minimum: 0
          required: true
          description: Id del trabajador
      requestBody:
        description: Datos de trabajador
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerDTO'
            example:
              name: juan
              lastname: santiago
              dni: 12345678Q
              nss: 123456789012
              phone: 123456789
              birthdate: 1990-08-19
              address: Ronda de Outeiro, nº 26 5ºA

      responses:
        201:
          description: Exito en la actualizacion del Trabajador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
              example:
                message: 'Worker registered successfully!'
        400:
          description: Payload de actualizacion invalido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Trabajador no valido'
                status: 400

        401:
          description: Error 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: Bad credentials
                status: 401

        429:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                path: /api/auth/signin
                error: Unauthorized
                message: To many requests
                status: 429
        default:
          description: Error 429
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

#security:
#  - bearerAuth: [ ]

################################################# COMPONENTS #######################################################

components:
  schemas:
    UpdateUserDTO:
      type: object
      required:
        - email
        - name
        - lastname
        - dni
        - nss
        - phone
        - birthdate

      properties:

        email:
          type: string
          format: email
          maxLength: 254
          example: juan@santiago.com
        name:
          type: string
          maxLength: 255
          example: juan
        lastname:
          type: string
          maxLength: 255
          example: santiago
        dni:
          type: string
          maxLength: 255
          example: 12345678Q
        nss:
          type: string
          maxLength: 255
          example: 123456789012
        phone:
          type: string
          maxLength: 255
          example: 123456789
        birthdate:
          type: string
          format: date
          example: 1990-08-19
      #          maxLength: 20
      additionalProperties: false



    NewUserDTO:
      type: object
      required:
        - username
        - password
        - roles
        - email
        - name
        - lastname
        - dni
        - nss
        - phone
        - birthdate

      properties:
        username:
          type: string
          maxLength: 255
          example: username
        password:
          type: string
          maxLength: 255
          example: passwordmorethan10digits
        roles:
          type: array
          maxItems: 5
          example: [ admin ]
          items:
            type: string
            maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
          example: mateo@mateo.com
        name:
          type: string
          maxLength: 255
          example: mateo
        lastname:
          type: string
          maxLength: 255
          example: tilves
        dni:
          type: string
          maxLength: 255
          example: 12345678Q
        nss:
          type: string
          maxLength: 255
          example: 123456789012
        phone:
          type: string
          maxLength: 255
          example: 123456789
        birthdate:
          type: string
          format: date
          example: 1990-08-19
      #          maxLength: 20
      additionalProperties: false

    WorkerDTO:
      type: object
      required:
        - id
        - name
        - lastname
        - dni
        - nss
        - phone
        - birthdate
        - address
      properties:
        id:
          type: integer
          format: int64
          maximum: 9223372036854775807
          minimum: 0
          example: 1
        name:
          type: string
          maxLength: 255
          example: mateo
        lastname:
          type: string
          maxLength: 255
          example: tilves
        dni:
          type: string
          maxLength: 255
          example: 12345678Q
        nss:
          type: string
          maxLength: 255
          example: 123456789012
        phone:
          type: string
          maxLength: 255
          example: 123456789
        birthdate:
          type: string
          format: date
          example: 1990-08-19
        address:
          type: string
          maxLength: 1024
          example: Ronda de Outeiro, nº 26 5ºA
      additionalProperties: false


    MessageResponseDTO:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          maxLength: 4000
          example: "Usuario registrado correctamente"
      additionalProperties: false

    ChangePasswordDTO:
      type: object
      required:
        - newPassword
        - oldPassword
      properties:
        oldPassword:
          type: string
          maxLength: 255
          example: oldpassword
        newPassword:
          type: string
          maxLength: 255
          minLength: 12
          example: newPasswordLong
      additionalProperties: false

    SignInRequestDTO:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          maxLength: 255
          example: userexample
        password:
          type: string
          maxLength: 255
          example: passwordexample
      additionalProperties: false

    SignInResponseDTO:
      type: object
      required:
        - id
        - username
        - tokenType
        - accessToken
        - roles
      properties:
        id:
          type: integer
          format: int64
          maximum: 9223372036854775807
          minimum: 0
          example: 1
        username:
          type: string
          maxLength: 255
          example: username
        tokenType:
          type: string
          maxLength: 255
          example: Bearer
        accessToken:
          type: string
          maxLength: 1000
          example: BearerToken
        roles:
          type: array
          maxItems: 5
          example: [ capataz, tractorista ]
          items:
            type: string
            maxLength: 255
      additionalProperties: false

    Error:
      type: object
      properties:
        path:
          description: Path al error
          type: string
          maxLength: 500
          nullable: false
          example: "/error"
        error:
          description: tipo de error
          type: string
          maxLength: 500
          nullable: false
          example: "Unauthorized"
        message:
          description: Mensaje de error explicativo
          type: string
          maxLength: 500
          nullable: false
          example: "Full authentication is required to access this resource"
        status:
          description: Codigo de error
          type: integer
          format: int32
          nullable: false
          example: 401
      additionalProperties: false

  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
