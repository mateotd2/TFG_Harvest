<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.udc.fic</groupId>
        <artifactId>harvest-proyect</artifactId>
        <version>1.0-SNAPSHOT</version>
<!--        <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
<!--        <relativePath>../pom.xml</relativePath> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
    </parent>

    <artifactId>harvest-backend</artifactId>

    <name>harvest-backend</name>
    <url>http://maven.apache.org</url>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
        <org.projectlombok.version>1.18.28</org.projectlombok.version>
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.basedir}/target/site/jacoco/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
        <sonar.java.spotbugs.reportPaths>${project.basedir}/target/spotbugsXml.xml</sonar.java.spotbugs.reportPaths>

    </properties>

    <!-- ********************************************** -->
    <!-- ****************** PROFILES ****************** -->
    <!-- ********************************************** -->
<!--    <profiles>-->
<!--        &lt;!&ndash; ============================================== &ndash;&gt;-->
<!--        &lt;!&ndash; ============= DATABASE PROFILES ============== &ndash;&gt;-->
<!--        &lt;!&ndash; ============================================== &ndash;&gt;-->
<!--        <profile>-->
<!--            <id>mysql</id>-->
<!--            <activation>-->
<!--                &lt;!&ndash; Active by default so it can be installed by CI &ndash;&gt;-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--            <properties>-->
<!--                <spring.profiles.active></spring.profiles.active>-->
<!--            </properties>-->

<!--        </profile>-->
<!--        <profile>-->
<!--            &lt;!&ndash; Prepares the project to make use of an H2 in-memory database &ndash;&gt;-->
<!--            <id>test</id>-->

<!--            <properties>-->
<!--                <spring.profiles.active>test</spring.profiles.active>-->
<!--            </properties>-->
<!--            <dependencies>-->
<!--                <dependency>-->
<!--                    &lt;!&ndash; H2 database &ndash;&gt;-->
<!--                    <groupId>com.h2database</groupId>-->
<!--                    <artifactId>h2</artifactId>-->
<!--                </dependency>-->
<!--            </dependencies>-->
<!--        </profile>-->

<!--    </profiles>-->


    <description>Harvest wine project</description>

    <dependencies>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.3.0</version>
        </dependency>


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>6.0.11</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.15.2</version>
        </dependency>


        <dependency>

            <groupId>org.springframework.boot</groupId>

            <artifactId>spring-boot-starter-data-jpa</artifactId>

        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>

            <groupId>org.springframework.boot</groupId>

            <artifactId>spring-boot-starter-security</artifactId>

        </dependency>

        <dependency>

            <groupId>org.yaml</groupId>

            <artifactId>snakeyaml</artifactId>

            <version>2.0</version>


        </dependency>

        <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>1.2.1</version>
        </dependency>

        <dependency>

            <groupId>org.springframework.boot</groupId>

            <artifactId>spring-boot-starter-validation</artifactId>


        </dependency>


        <dependency>

            <groupId>io.jsonwebtoken</groupId>

            <artifactId>jjwt-api</artifactId>

            <version>0.11.5</version>

        </dependency>


        <dependency>

            <groupId>io.jsonwebtoken</groupId>

            <artifactId>jjwt-impl</artifactId>

            <version>0.11.5</version>

            <scope>runtime</scope>

        </dependency>

        <dependency>

            <groupId>io.jsonwebtoken</groupId>

            <artifactId>jjwt-jackson</artifactId>

            <version>0.11.5</version>

            <scope>runtime</scope>

        </dependency>

        <dependency>

            <groupId>org.slf4j</groupId>

            <artifactId>slf4j-api</artifactId>

            <version>2.0.7</version>

        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>

            <artifactId>h2</artifactId>

            <version>2.2.220</version>

            <scope>test</scope>

        </dependency>


        <dependency>

            <groupId>org.springframework.security</groupId>

            <artifactId>spring-security-test</artifactId>

            <scope>test</scope>

        </dependency>


        <dependency>
            <groupId>com.udc.fic</groupId>
            <artifactId>harvest-open-api</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>3.1.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.10</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <dependency>

            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>


        </dependency>



    </dependencies>


    <build>
        <!-- ============================================== -->
        <!-- =============== TEST RESOURCES =============== -->
        <!-- ============================================== -->




        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Dspring.profiles.active=test</argLine>
                </configuration>
            </plugin>


            <!--            CONFIGURACION RECOMENDADA PARA LOMBOK + MAPSTRUCT-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>


                    </annotationProcessorPaths>
                    <compilerArgs>
                        <compilerArg>
                            -Amapstruct.defaultComponentModel=spring
                        </compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>

                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>

                    <excludes>

                        <exclude>

                            <groupId>org.projectlombok</groupId>

                            <artifactId>lombok</artifactId>

                        </exclude>

                    </excludes>

                </configuration>
            </plugin>


            <!-- Jacoco setup -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <configuration>
                    <excludes>
                        <exclude>**/com/udc/fic/mapper/**/*, **/com/udc/fic/security/**/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- attached to Maven test phase -->
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.15.3</version>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>1.2.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>none</phase>  <!-- Para usarlo manualmente-->
                        <goals>
                            <goal>
                                mutationCoverage
                            </goal>
                        </goals>
                    </execution>
                </executions>
<!--            OPTIMIZACION DE PITEST: https://blog.frankel.ch/faster-mutation-testing/-->
                <configuration>

                    <historyInputFile>${project.basedir}/.historyMutation</historyInputFile>
                    <historyOutputFile>${project.basedir}/.historyMutation</historyOutputFile>
                    <features>
                        <feature>-frecord</feature>
                        <feature>+auto_threads</feature>
                    </features>

                    <excludedClasses>
                        <param>com.udc.fic.security.*</param>
                        <param>com.udc.fic.mapper.*</param>
                        <param>com.udc.fic.controller.CampanhaController</param>
                        <param>com.udc.fic.controller.TrabajadoresControllerTest</param>
                    </excludedClasses>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.3.2</version>
                <configuration>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                </configuration>

                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>spotbugs</goal>
                        </goals>

                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.3.2</version>
            </plugin>

            <!-- see pom.xml for rest of reporting section -->

            <!-- generate the coverage report using Jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <configuration>
                    <excludes>
                        <exclude>**/com/udc/fic/security/**/*</exclude>
                        <exclude>**/com/udc/fic/mapper/**/*</exclude>
                    </excludes>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.15.3</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
